/* styles.css */
.jumbotron:hover{
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2); /* Increase shadow on hover */
    transform: scale(1.05) translateZ(3px); /* Scale up and move forward */
}
.container {
    margin: 20px;
    padding: 20px;
    background-color: #ac9f9f; /* Set grey background color for the container */
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    transition: box-shadow 0.3s ease, transform 0.3s ease; /* Smooth transition for shadow and movement */
}
.todo{
     margin: 20px;
    padding: 20px;
    background-color: #ac9f9f; /* Set grey background color for the container */
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    transition: box-shadow 0.3s ease, transform 0.3s ease; /* Smooth transition for shadow and movement */   
}
.container:c {
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2); /* Increase shadow on hover */
    transform: scale(1.05) translateZ(10px); /* Scale up and move forward */
}
.todo:hover{
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2); /* Increase shadow on hover */
    transform: scale(1.05) translateZ(3px); /* Scale up and move forward */
}  

#task-input {
    width: calc(100% - 120px); /* Adjust width for input */
    padding: 10px;
    border-radius: 15px; /* Make the corners curvy */
    border: 1px solid #ccc;
}

#add-task-btn {
    padding: 10px;
    margin-left: 10px;
    border-radius: 15px; /* Make the button corners curvy too */
    border: none;
    background-color: #4caf50; /* Green background */
    color: white;
}

#add-task-btn:hover {
    background-color: #45a049; /* Darker green on hover */
}

button {
    background: none; /* Remove default background */
    border: none; /* Remove default border */
    cursor: pointer; /* Change cursor to pointer */
}

button i {
    font-size: 20px; /* Adjust icon size */
}

#task-list {
    list-style-type: none; /* Remove default list styling */
    padding-left: 0; /* Remove default padding */
}

#task-list li {
    display: flex; /* Flexbox for layout */
    justify-content: space-between; /* Space between task text and delete button */
    align-items: center; /* Center items vertically */
    padding: 10px;
    border-bottom: 1px solid #ccc; /* Divider between tasks */
    border-radius: 10px; /* Optional rounded corners for list items */
    margin-bottom: 10px; /* Add space between tasks */
}

.completed {
    text-decoration: line-through; /* Strike-through for completed tasks */
}
.notes {
    font-size: 1em; /* Smaller font size */
    color: #e61616; /* Lighter color for visibility */
    margin-left: 0.00033px; /* Reduce space between task text and notes */
    font-style: italic; /* Make the text italic */
    text-transform: lowercase; /* Ensure text is in lowercase */
}

.checkbox {
    display: flex; /* Align items in a row */
    align-items: center; /* Center items vertically */
 }
 
 .checkbox input {
    display: none; /* Hide the default checkbox */
 }
 
 .checkbox__inner {
    width: 20px; /* Width of the circular checkbox */
    height: 20px; /* Height of the circular checkbox */
    border: 2px solid #4caf50; /* Border color */
    border-radius: 50%; /* Make it circular */
    position: relative; /* Position relative for inner checkmark */
    margin-right: 10px; /* Space between checkbox and text */
    transition: background-color 0.3s ease; /* Smooth transition for background color */
 }
 
 .checkbox input:checked + .checkbox__inner {
    background-color: #4caf50; /* Background color when checked */
 }
 
 .checkbox__inner::after {
    content: ''; /* Empty content for checkmark */
    position: absolute;
    left: 5px; /* Position checkmark inside circle */
    top: 9px; /* Position checkmark inside circle */
    width: 5px; /* Width of checkmark */
    height: 10px; /* Height of checkmark */
    border: solid white; /* Color of checkmark */
    border-width: 0 2px 2px 0; /* Create a right angle for checkmark */
    transform: rotate(45deg); /* Rotate to form a checkmark */
    opacity: 0; /* Initially hidden */
    transition: opacity 0.2s ease; /* Smooth transition for visibility */
 }
 
 .checkbox input:checked + .checkbox__inner::after {
    opacity: 1; /* Show checkmark when checked */ 
 }
 